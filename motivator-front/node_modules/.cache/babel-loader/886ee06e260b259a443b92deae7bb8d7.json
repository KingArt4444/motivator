{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\4 \\u043A\\u0443\\u0440\\u0441\\\\kurswatch7-front\\\\src\\\\component\\\\SalaryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport SalaryDataService from '../service/SalaryService';\n\nclass SalaryComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      // salary: {}\n      type: '',\n      salary: '',\n      premiya: '',\n      sum: '',\n      month: '',\n      user: {\n        id: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    SalaryDataService.retrieveSalary(this.state.id).then(response => this.setState({\n      salary: response.data.salary\n    }));\n  }\n\n  onSubmit(values) {\n    let salary = {\n      id: this.state.id,\n      type: values.type,\n      salary: values.salary,\n      premiya: values.premiya,\n      sum: values.sum,\n      month: values.month,\n      user: {\n        id: values.userId\n      }\n    };\n\n    if (values.id == -1) {\n      SalaryDataService.createSalary(salary).then(() => this.props.history.push('/salaries'));\n    } else {\n      SalaryDataService.updateSalary(this.state.id, salary).then(() => this.props.history.push('/salaries'));\n    }\n\n    console.log(values);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = 'Введите имя';\n    } else if (values.name.length < 2) {\n      errors.name = 'Имя должно состоять минимум из 2-х букв';\n    }\n\n    if (!values.surname) {\n      errors.surname = 'Введите фамилию';\n    } else if (values.surname.length < 3) {\n      errors.surname = 'Фамилия должно состоять минимум из 2-х букв';\n    }\n\n    if (!values.age) {\n      errors.age = 'Введите возраст';\n    }\n\n    if (!values.email) {\n      errors.email = 'Введите адрес электронной почты';\n    } else if (values.email.length < 8) {\n      errors.email = 'Имя должно состоять минимум из 8-ми символов';\n    }\n\n    return errors;\n  }\n\n  render() {\n    let _this$state = this.state,\n        type = _this$state.type,\n        salary = _this$state.salary,\n        id = _this$state.id,\n        premiya = _this$state.premiya,\n        sum = _this$state.sum,\n        month = _this$state.month,\n        user = _this$state.user;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        type,\n        salary,\n        premiya,\n        sum,\n        month,\n        user\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"surname\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"age\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"surname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n  }\n\n}\n\nexport default SalaryComponent;","map":{"version":3,"sources":["E:/Учёба/4 курс/kurswatch7-front/src/component/SalaryComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","SalaryDataService","SalaryComponent","constructor","props","state","id","match","params","type","salary","premiya","sum","month","user","onSubmit","bind","validate","componentDidMount","console","log","retrieveSalary","then","response","setState","data","values","userId","createSalary","history","push","updateSalary","errors","name","length","surname","age","email","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport SalaryDataService from '../service/SalaryService';\r\n\r\nclass SalaryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // salary: {}\r\n            type: '',\r\n            salary: '',\r\n            premiya: '',\r\n            sum: '',\r\n            month: '',\r\n            user: {\r\n                id: ''\r\n            }\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        SalaryDataService.retrieveSalary(this.state.id)\r\n            .then(response => this.setState({\r\n                salary: response.data.salary\r\n            }))\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let salary = {\r\n            id: this.state.id,\r\n            type: values.type,\r\n            salary: values.salary,\r\n            premiya: values.premiya,\r\n            sum: values.sum,\r\n            month: values.month,\r\n            user: {\r\n                id: values.userId\r\n            }\r\n        }\r\n\r\n\r\n        if (values.id == -1) {\r\n            SalaryDataService.createSalary(salary)\r\n                .then(() => this.props.history.push('/salaries'))\r\n        } else {\r\n            SalaryDataService.updateSalary(this.state.id, salary)\r\n                .then(() => this.props.history.push('/salaries'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            errors.name = 'Введите имя'\r\n        } else if (values.name.length < 2) {\r\n            errors.name = 'Имя должно состоять минимум из 2-х букв'\r\n        }\r\n        if (!values.surname) {\r\n            errors.surname = 'Введите фамилию'\r\n        } else if (values.surname.length < 3) {\r\n            errors.surname = 'Фамилия должно состоять минимум из 2-х букв'\r\n        }\r\n        if (!values.age) {\r\n            errors.age = 'Введите возраст'\r\n        }\r\n        if (!values.email) {\r\n            errors.email = 'Введите адрес электронной почты'\r\n        } else if (values.email.length < 8) {\r\n            errors.email = 'Имя должно состоять минимум из 8-ми символов'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n\r\n    render() {\r\n        let { type, salary, id, premiya, sum, month, user } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <h3>User</h3>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ id, type, salary, premiya, sum, month, user }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"name\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"surname\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"age\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"email\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Id</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Имя</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Фамилия</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"surname\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Возраст</label>\r\n                                        <Field className=\"form-control\" type=\"number\" name=\"age\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>E-mail</label>\r\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\" />\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Сохранить</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SalaryComponent"]},"metadata":{},"sourceType":"module"}