{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\4 \\u043A\\u0443\\u0440\\u0441\\\\kurswatch7-front\\\\src\\\\component\\\\BonusPopFormComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport BonusDataService from '../service/BonusDataService';\n\nconst PopPop = require('react-poppop');\n\nclass BonusPopFormComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleShow = show => {\n      this.setState({\n        show\n      });\n    };\n\n    this.state = {\n      id: this.props.id,\n      type: '',\n      bomusamount: '',\n      sum: '',\n      year: '',\n      month: '',\n      user: {\n        id: this.props.userId\n      },\n      show: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    this.handleMonthDropdownChange = this.handleMonthDropdownChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    BonusDataService.retrieveBonus(this.state.id).then(response => {\n      this.setState({\n        type: response.data.type,\n        bomusamount: response.data.bomusamount,\n        sum: response.data.sum,\n        year: response.data.year,\n        month: response.data.month,\n        user: {\n          id: response.data.user.id\n        }\n      });\n      let selectMonthElement = document.getElementById(\"demo-simple-select\");\n      selectMonthElement.value = response.data.month;\n      let selectTypeElement = document.getElementById(\"type-select\");\n      selectTypeElement.value = response.data.type;\n      console.log(selectMonthElement.value);\n    });\n  }\n\n  onSubmit(values) {\n    let bonus = {\n      id: this.state.id,\n      type: values.type,\n      bomusamount: values.bomusamount,\n      sum: values.sum,\n      year: values.year,\n      month: values.month,\n      user: {\n        id: this.state.user.id\n      }\n    };\n\n    if (values.id == -1) {\n      BonusDataService.createBonus(bonus).then(() => {\n        this.toggleShow(false);\n        document.location.href = \"/bonuses/\".concat(this.state.user.id); // this.props.history.push('/bonuses')\n      });\n    } else {\n      BonusDataService.updateSalary(this.state.id, bonus).then(() => this.props.history.push('/bonuses'));\n    }\n\n    console.log(values);\n  }\n\n  validate(values) {\n    let errors = {}; // if (values.type.length < 3) {\n    //     errors.type = 'Имя должно состоять минимум из 2-х букв'\n    // }\n    // if (!values.salary) {\n    //     errors.salary = 'Введите фамилию'\n    // }\n    // if (!values.premiya) {\n    //     errors.premiya = 'Фамилия должно состоять минимум из 2-х букв'\n    // }\n    // if (!values.sum) {\n    //     errors.sum = 'Введите возраст'\n    // }\n    // if (!values.month) {\n    //     errors.month = 'Введите месяц'\n    // }\n    // console.log(values.user)\n    // if (values.user.id === \"\") {\n    //     errors.user = 'Выберите сотрудника перед сохранением'\n    // }\n\n    return errors;\n  }\n\n  handleDropdownChange(e) {\n    this.setState({\n      type: e.target.value\n    });\n  }\n\n  handleMonthDropdownChange(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  render() {\n    const show = this.state.show;\n    let _this$state = this.state,\n        type = _this$state.type,\n        bomusamount = _this$state.bomusamount,\n        id = _this$state.id,\n        sum = _this$state.sum,\n        year = _this$state.year,\n        month = _this$state.month,\n        user = _this$state.user;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.toggleShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), React.createElement(PopPop, {\n      position: \"centerCenter\",\n      open: show,\n      closeBtn: true,\n      closeOnEsc: true,\n      onClose: () => this.toggleShow(false),\n      closeOnOverlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0435\\u043C\\u0438\\u044F\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        type,\n        bomusamount,\n        sum,\n        year,\n        month,\n        user\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"\\u0422\\u0438\\u043F\"), React.createElement(\"select\", {\n      id: \"type-select\",\n      className: \"form-control\",\n      name: \"type\",\n      value: this.props.type,\n      onChange: this.handleDropdownChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F \\u043F\\u0440\\u0435\\u043C\\u0438\\u0438\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435\",\n      label: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0435\",\n      label: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0435\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0420\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435\",\n      label: \"\\u0420\\u0430\\u0437\\u043E\\u0432\\u043E\\u0435\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 \\u043F\\u0440\\u0435\\u043C\\u0438\\u0438(%)\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"bonusamount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0435\\u043C\\u0438\\u044F\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"premiya\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      id: \"demo-simple-select-label\",\n      htmlFor: \"demo-simple-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\"), React.createElement(\"select\", {\n      id: \"demo-simple-select\",\n      className: \"form-control\",\n      name: \"month\",\n      value: this.props.month,\n      onChange: this.handleMonthDropdownChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043C\\u0435\\u0441\\u044F\\u0446\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\",\n      label: \"\\u042F\\u043D\\u0432\\u0430\\u0440\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\",\n      label: \"\\u0424\\u0435\\u0432\\u0440\\u0430\\u043B\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u041C\\u0430\\u0440\\u0442\",\n      label: \"\\u041C\\u0430\\u0440\\u0442\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\",\n      label: \"\\u0410\\u043F\\u0440\\u0435\\u043B\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u041C\\u0430\\u0439\",\n      label: \"\\u041C\\u0430\\u0439\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0418\\u044E\\u043D\\u044C\",\n      label: \"\\u0418\\u044E\\u043D\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0418\\u044E\\u043B\\u044C\",\n      label: \"\\u0418\\u044E\\u043B\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0410\\u0432\\u0433\\u0443\\u0441\\u0442\",\n      label: \"\\u0410\\u0432\\u0433\\u0443\\u0441\\u0442\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0421\\u0435\\u043D\\u0442\\u044F\\u0431\\u0440\\u044C\",\n      label: \"\\u0421\\u0435\\u043D\\u0442\\u044F\\u0431\\u0440\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u041E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044C\",\n      label: \"\\u041E\\u043A\\u0442\\u044F\\u0431\\u0440\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u041D\\u043E\\u044F\\u0431\\u0440\\u044C\",\n      label: \"\\u041D\\u043E\\u044F\\u0431\\u0440\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"\\u0414\\u0435\\u043A\\u0430\\u0431\\u0440\\u044C\",\n      label: \"\\u0414\\u0435\\u043A\\u0430\\u0431\\u0440\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"year-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"\\u0413\\u043E\\u0434\"), React.createElement(Field, {\n      className: \"form-control\",\n      id: \"year-input\",\n      type: \"number\",\n      name: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })))), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))))));\n  }\n\n}\n\nexport default BonusPopFormComponent;","map":{"version":3,"sources":["E:/Учёба/4 курс/kurswatch7-front/src/component/BonusPopFormComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","BonusDataService","PopPop","require","BonusPopFormComponent","constructor","props","toggleShow","show","setState","state","id","type","bomusamount","sum","year","month","user","userId","onSubmit","bind","validate","handleDropdownChange","handleMonthDropdownChange","componentDidMount","console","log","retrieveBonus","then","response","data","selectMonthElement","document","getElementById","value","selectTypeElement","values","bonus","createBonus","location","href","updateSalary","history","push","errors","e","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport BonusDataService from '../service/BonusDataService';\r\nconst PopPop = require('react-poppop');\r\n\r\nclass BonusPopFormComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.id,\r\n            type: '',\r\n            bomusamount: '',\r\n            sum: '',\r\n            year: '',\r\n            month: '',\r\n            user: {\r\n                id: this.props.userId\r\n            },\r\n            show: false\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.handleDropdownChange = this.handleDropdownChange.bind(this)\r\n        this.handleMonthDropdownChange = this.handleMonthDropdownChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        BonusDataService.retrieveBonus(this.state.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    type: response.data.type,\r\n                    bomusamount: response.data.bomusamount,\r\n                    sum: response.data.sum,\r\n                    year: response.data.year,\r\n                    month: response.data.month,\r\n                    user: {\r\n                        id: response.data.user.id\r\n                    }\r\n                })\r\n                let selectMonthElement = document.getElementById(\"demo-simple-select\");\r\n                selectMonthElement.value = response.data.month;\r\n                let selectTypeElement = document.getElementById(\"type-select\");\r\n                selectTypeElement.value = response.data.type;\r\n                console.log(selectMonthElement.value);\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let bonus = {\r\n            id: this.state.id,\r\n            type: values.type,\r\n            bomusamount: values.bomusamount,\r\n            sum: values.sum,\r\n            year: values.year,\r\n            month: values.month,\r\n            user: {\r\n                id: this.state.user.id\r\n            }\r\n        }\r\n\r\n\r\n        if (values.id == -1) {\r\n            BonusDataService.createBonus(bonus)\r\n                .then(() => {\r\n                    this.toggleShow(false);\r\n                    document.location.href = `/bonuses/${this.state.user.id}`;\r\n                    // this.props.history.push('/bonuses')\r\n                })\r\n        } else {\r\n            BonusDataService.updateSalary(this.state.id, bonus)\r\n                .then(() => this.props.history.push('/bonuses'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        // if (values.type.length < 3) {\r\n        //     errors.type = 'Имя должно состоять минимум из 2-х букв'\r\n        // }\r\n        // if (!values.salary) {\r\n        //     errors.salary = 'Введите фамилию'\r\n        // }\r\n        // if (!values.premiya) {\r\n        //     errors.premiya = 'Фамилия должно состоять минимум из 2-х букв'\r\n        // }\r\n        // if (!values.sum) {\r\n        //     errors.sum = 'Введите возраст'\r\n        // }\r\n        // if (!values.month) {\r\n        //     errors.month = 'Введите месяц'\r\n        // }\r\n        // console.log(values.user)\r\n        // if (values.user.id === \"\") {\r\n        //     errors.user = 'Выберите сотрудника перед сохранением'\r\n        // }\r\n\r\n        return errors\r\n    }\r\n\r\n    handleDropdownChange(e) {\r\n        this.setState({ type: e.target.value });\r\n    }\r\n\r\n    handleMonthDropdownChange(e) {\r\n        this.setState({\r\n            month: e.target.value\r\n        });\r\n    }\r\n\r\n    toggleShow = show => {\r\n        this.setState({ show });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { show } = this.state;\r\n        let { type, bomusamount, id, sum, year, month, user } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <button className=\"btn btn-success\" onClick={() => this.toggleShow(true)}>Добавить</button>\r\n                <PopPop position=\"centerCenter\"\r\n                    open={show}\r\n                    closeBtn={true}\r\n                    closeOnEsc={true}\r\n                    onClose={() => this.toggleShow(false)}\r\n                    closeOnOverlay={true}>\r\n                    <div>\r\n                        <h3>Премия</h3>\r\n                        <div className=\"container\">\r\n                            <Formik\r\n                                initialValues={{ id, type, bomusamount, sum, year, month, user }}\r\n                                onSubmit={this.onSubmit}\r\n                                validateOnChange={false}\r\n                                validateOnBlur={false}\r\n                                validate={this.validate}\r\n                                enableReinitialize={true}\r\n                            >\r\n                                {\r\n                                    (props) => (\r\n                                        <Form>\r\n                                            {/* <ErrorMessage name=\"type\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"salary\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"premiya\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"sum\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"month\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"user\" component=\"div\"\r\n                                        className=\"alert alert-warning\" /> */}\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Id</label>\r\n                                                <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Тип</label>\r\n                                                <select\r\n                                                    id=\"type-select\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"type\"\r\n                                                    value={this.props.type}\r\n                                                    onChange={this.handleDropdownChange}\r\n                                                >\r\n                                                    <option value='0' label=\"Выберите тип премии\" />\r\n                                                    <option value='Базовое' label=\"Базовое\" />\r\n                                                    <option value='Дополнительное' label=\"Дополнительное\" />\r\n                                                    <option value='Разовое' label=\"Разовое\" />\r\n                                                </select>\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Размер премии(%)</label>\r\n                                                <Field className=\"form-control\" type=\"number\" name=\"bonusamount\" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>Премия</label>\r\n                                                <Field className=\"form-control\" type=\"number\" name=\"premiya\" />\r\n                                            </fieldset>\r\n                                            <fieldset>\r\n                                                <div className=\"form-row\">\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <label id=\"demo-simple-select-label\" htmlFor=\"demo-simple-select\">Месяц</label>\r\n                                                        <select\r\n                                                            id=\"demo-simple-select\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"month\"\r\n                                                            value={this.props.month}\r\n                                                            onChange={this.handleMonthDropdownChange}\r\n                                                        >\r\n                                                            <option value='0' label=\"Выберите месяц\" />\r\n                                                            <option value='Январь' label=\"Январь\" />\r\n                                                            <option value='Февраль' label=\"Февраль\" />\r\n                                                            <option value='Март' label=\"Март\" />\r\n                                                            <option value='Апрель' label=\"Апрель\" />\r\n                                                            <option value='Май' label=\"Май\" />\r\n                                                            <option value='Июнь' label=\"Июнь\" />\r\n                                                            <option value='Июль' label=\"Июль\" />\r\n                                                            <option value='Август' label=\"Август\" />\r\n                                                            <option value='Сентябрь' label=\"Сентябрь\" />\r\n                                                            <option value='Октябрь' label=\"Октябрь\" />\r\n                                                            <option value='Ноябрь' label=\"Ноябрь\" />\r\n                                                            <option value='Декабрь' label=\"Декабрь\" />\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-6\">\r\n                                                        <label htmlFor=\"year-input\">Год</label>\r\n                                                        <Field className=\"form-control\" id=\"year-input\" type=\"number\" name=\"year\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </fieldset>\r\n                                            <button className=\"btn btn-success\" type=\"submit\">Сохранить</button>\r\n                                        </Form>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                    </div>\r\n                </PopPop>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BonusPopFormComponent"]},"metadata":{},"sourceType":"module"}