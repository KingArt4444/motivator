{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\4 \\u043A\\u0443\\u0440\\u0441\\\\kurswatch7-front\\\\src\\\\component\\\\WorkAmountComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport WorkAmountDataService from '../service/WorkAmountDataService';\nimport UserDataService from '../service/UserDataService';\n\nclass WorkAmountComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      percent: '',\n      index: '',\n      coefficient: '',\n      month: '',\n      user: [],\n      users: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    WorkAmountDataService.retrieveAmount(this.state.id).then(response => this.setState({\n      percent: response.data.percent,\n      index: response.data.index,\n      coefficient: response.data.coefficient,\n      month: response.data.month,\n      user: response.data.user\n    }));\n  }\n\n  onSubmit(values) {\n    let workAmount = {\n      id: this.state.id,\n      percent: values.percent,\n      index: values.index,\n      coefficient: values.coefficient,\n      month: values.month,\n      user: values.user\n    };\n\n    if (values.id == -1) {\n      WorkAmountDataService.createAmount(workAmount).then(() => this.props.history.push('/workamounts'));\n    } else {\n      WorkAmountDataService.updateAmount(this.state.id, workAmount).then(() => this.props.history.push('/workamounts'));\n    }\n\n    console.log(values);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.percent) {\n      errors.percent = 'Введите имя';\n    } else if (values.percent.length < 2) {\n      errors.percent = 'Имя должно состоять минимум из 2-х букв';\n    }\n\n    if (!values.index) {\n      errors.index = 'Введите фамилию';\n    } else if (values.index.length < 3) {\n      errors.index = 'Фамилия должно состоять минимум из 2-х букв';\n    }\n\n    if (!values.coefficient) {\n      errors.coefficient = 'Введите возраст';\n    }\n\n    if (!values.month) {\n      errors.month = 'Введите адрес электронной почты';\n    } else if (values.month.length < 8) {\n      errors.month = 'Имя должно состоять минимум из 8-ми символов';\n    }\n\n    return errors;\n  }\n\n  getUsers() {\n    UserDataService.retrieveAllUsers().then(response => {\n      console.log(response.data);\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        percent = _this$state.percent,\n        index = _this$state.index,\n        coefficient = _this$state.coefficient,\n        month = _this$state.month,\n        user = _this$state.user,\n        id = _this$state.id;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        percent,\n        index,\n        coefficient,\n        month,\n        user,\n        id\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"percent\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"index\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"coefficient\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"month\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"% \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u044D\\u0444-\\u0442\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"coefficient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"), React.createElement(\"select\", {\n      class: \"form-control\",\n      name: \"user\",\n      value: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.users.map(user => React.createElement(\"option\", {\n      key: user.id,\n      value: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, user.name, \" \", user.surname)), \") }\", React.createElement(\"option\", {\n      value: \"green\",\n      label: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n  }\n\n}\n\nexport default WorkAmountComponent;","map":{"version":3,"sources":["E:/Учёба/4 курс/kurswatch7-front/src/component/WorkAmountComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","WorkAmountDataService","UserDataService","WorkAmountComponent","constructor","props","state","id","match","params","percent","index","coefficient","month","user","users","onSubmit","bind","validate","componentDidMount","console","log","retrieveAmount","then","response","setState","data","values","workAmount","createAmount","history","push","updateAmount","errors","length","getUsers","retrieveAllUsers","render","map","name","surname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport WorkAmountDataService from '../service/WorkAmountDataService';\r\nimport UserDataService from '../service/UserDataService';\r\n\r\nclass WorkAmountComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            percent: '',\r\n            index: '',\r\n            coefficient: '',\r\n            month: '',\r\n            user: [],\r\n            users: []\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        WorkAmountDataService.retrieveAmount(this.state.id)\r\n            .then(response => this.setState({\r\n                percent: response.data.percent,\r\n                index: response.data.index,\r\n                coefficient: response.data.coefficient,\r\n                month: response.data.month,\r\n                user: response.data.user\r\n            }))\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let workAmount = {\r\n            id: this.state.id,\r\n            percent: values.percent,\r\n            index: values.index,\r\n            coefficient: values.coefficient,\r\n            month: values.month,\r\n            user: values.user\r\n        }\r\n\r\n\r\n        if (values.id == -1) {\r\n            WorkAmountDataService.createAmount(workAmount)\r\n                .then(() => this.props.history.push('/workamounts'))\r\n        } else {\r\n            WorkAmountDataService.updateAmount(this.state.id, workAmount)\r\n                .then(() => this.props.history.push('/workamounts'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.percent) {\r\n            errors.percent = 'Введите имя'\r\n        } else if (values.percent.length < 2) {\r\n            errors.percent = 'Имя должно состоять минимум из 2-х букв'\r\n        }\r\n        if (!values.index) {\r\n            errors.index = 'Введите фамилию'\r\n        } else if (values.index.length < 3) {\r\n            errors.index = 'Фамилия должно состоять минимум из 2-х букв'\r\n        }\r\n        if (!values.coefficient) {\r\n            errors.coefficient = 'Введите возраст'\r\n        }\r\n        if (!values.month) {\r\n            errors.month = 'Введите адрес электронной почты'\r\n        } else if (values.month.length < 8) {\r\n            errors.month = 'Имя должно состоять минимум из 8-ми символов'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    getUsers() {\r\n        UserDataService.retrieveAllUsers()\r\n            .then(\r\n                response => {\r\n                    console.log(response.data);\r\n                    this.setState({ users: response.data })\r\n                })\r\n    }\r\n\r\n\r\n    render() {\r\n        let { percent, index, coefficient, month, user, id } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <h3>User</h3>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ percent, index, coefficient, month, user, id }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"percent\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"index\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"coefficient\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"month\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Id</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>% выполнения задач</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"percent\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Оценка</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"index\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Коэф-т</label>\r\n                                        <Field className=\"form-control\" type=\"number\" name=\"coefficient\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Месяц</label>\r\n                                        <Field className=\"form-control\" type=\"email\" name=\"month\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Сотрудник</label>\r\n                                        <select\r\n                                            class=\"form-control\"\r\n                                            name=\"user\"\r\n                                        value={user}\r\n                                        >\r\n                                            {\r\n                                                this.state.users.map(user => (\r\n                                                    <option key={user.id} value={user}>\r\n                                                        {user.name} {user.surname}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                            )\r\n                                }\r\n                                        <option value=\"green\" label=\"green\" />\r\n                                        </select>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Сохранить</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkAmountComponent"]},"metadata":{},"sourceType":"module"}