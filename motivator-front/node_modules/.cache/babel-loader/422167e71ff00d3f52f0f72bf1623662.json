{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\4 \\u043A\\u0443\\u0440\\u0441\\\\kurswatch7-front\\\\src\\\\component\\\\SalaryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport SalaryDataService from '../service/SalaryService';\nimport UserDataService from '../service/UserDataService';\n\nclass SalaryComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      // salary: {}\n      type: '',\n      salary: '',\n      premiya: '',\n      sum: '',\n      month: '',\n      user: {\n        id: ''\n      },\n      users: []\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id);\n    this.getUsers(); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    SalaryDataService.retrieveSalary(this.state.id).then(response => this.setState({\n      type: response.data.type,\n      salary: response.data.salary,\n      premiya: response.data.premiya,\n      sum: response.data.sum,\n      month: response.data.month,\n      user: {\n        id: response.data.user.id\n      }\n    }));\n  }\n\n  onSubmit(values) {\n    let salary = {\n      id: this.state.id,\n      type: values.type,\n      salary: values.salary,\n      premiya: values.premiya,\n      sum: values.sum,\n      month: values.month,\n      user: {\n        id: values.user\n      }\n    };\n\n    if (values.id == -1) {\n      SalaryDataService.createSalary(salary).then(() => this.props.history.push('/salaries'));\n    } else {\n      SalaryDataService.updateSalary(this.state.id, salary).then(() => this.props.history.push('/salaries'));\n    }\n\n    console.log(values);\n  }\n\n  validate(values) {\n    let errors = {}; // if (!values.name) {\n    //     errors.name = 'Введите имя'\n    // } else if (values.name.length < 2) {\n    //     errors.name = 'Имя должно состоять минимум из 2-х букв'\n    // }\n    // if (!values.surname) {\n    //     errors.surname = 'Введите фамилию'\n    // } else if (values.surname.length < 3) {\n    //     errors.surname = 'Фамилия должно состоять минимум из 2-х букв'\n    // }\n    // if (!values.age) {\n    //     errors.age = 'Введите возраст'\n    // }\n    // if (!values.email) {\n    //     errors.email = 'Введите адрес электронной почты'\n    // } else if (values.email.length < 8) {\n    //     errors.email = 'Имя должно состоять минимум из 8-ми символов'\n    // }\n\n    return errors;\n  }\n\n  getUsers() {\n    UserDataService.retrieveAllUsers().then(response => {\n      console.log(response.data);\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  getUser(id) {\n    UserDataService.retrieveUser(id).then(response => {\n      return response.data;\n    });\n  }\n\n  handleDropdownChange(e) {\n    this.setState({\n      user: e.target.value\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        type = _this$state.type,\n        salary = _this$state.salary,\n        id = _this$state.id,\n        premiya = _this$state.premiya,\n        sum = _this$state.sum,\n        month = _this$state.month,\n        user = _this$state.user;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        id,\n        type,\n        salary,\n        premiya,\n        sum,\n        month,\n        user\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"surname\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"age\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"email\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"id\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u0422\\u0438\\u043F\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u041E\\u043A\\u043B\\u0430\\u0434\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u0435\\u043C\\u0438\\u044F\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"premiya\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\\u0421\\u0443\\u043C\\u043C\\u0430\\u0440\\u043D\\u043E\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"number\",\n      name: \"sum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"user\",\n      value: this.props.user,\n      onChange: this.handleDropdownChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.users.map(user => React.createElement(\"option\", {\n      key: user.id,\n      value: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, user.name, \" \", user.surname)), React.createElement(\"option\", {\n      value: \"green\",\n      label: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))));\n  }\n\n}\n\nexport default SalaryComponent;","map":{"version":3,"sources":["E:/Учёба/4 курс/kurswatch7-front/src/component/SalaryComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","SalaryDataService","UserDataService","SalaryComponent","constructor","props","state","id","match","params","type","salary","premiya","sum","month","user","users","onSubmit","bind","validate","handleDropdownChange","componentDidMount","console","log","getUsers","retrieveSalary","then","response","setState","data","values","createSalary","history","push","updateSalary","errors","retrieveAllUsers","getUser","retrieveUser","e","target","value","render","map","name","surname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport SalaryDataService from '../service/SalaryService';\r\nimport UserDataService from '../service/UserDataService';\r\n\r\nclass SalaryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            // salary: {}\r\n            type: '',\r\n            salary: '',\r\n            premiya: '',\r\n            sum: '',\r\n            month: '',\r\n            user: {\r\n                id: ''\r\n            },\r\n            users: []\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.handleDropdownChange = this.handleDropdownChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(this.state.id)\r\n\r\n        this.getUsers();\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.id == -1) {\r\n            return\r\n        }\r\n\r\n        SalaryDataService.retrieveSalary(this.state.id)\r\n            .then(response => this.setState({\r\n                type: response.data.type,\r\n                salary: response.data.salary,\r\n                premiya: response.data.premiya,\r\n                sum: response.data.sum,\r\n                month: response.data.month,\r\n                user: {\r\n                    id: response.data.user.id\r\n                }\r\n            }))\r\n\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let salary = {\r\n            id: this.state.id,\r\n            type: values.type,\r\n            salary: values.salary,\r\n            premiya: values.premiya,\r\n            sum: values.sum,\r\n            month: values.month,\r\n            user: {\r\n                id: values.user\r\n            }\r\n        }\r\n\r\n\r\n        if (values.id == -1) {\r\n            SalaryDataService.createSalary(salary)\r\n                .then(() => this.props.history.push('/salaries'))\r\n        } else {\r\n            SalaryDataService.updateSalary(this.state.id, salary)\r\n                .then(() => this.props.history.push('/salaries'))\r\n        }\r\n\r\n        console.log(values);\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        // if (!values.name) {\r\n        //     errors.name = 'Введите имя'\r\n        // } else if (values.name.length < 2) {\r\n        //     errors.name = 'Имя должно состоять минимум из 2-х букв'\r\n        // }\r\n        // if (!values.surname) {\r\n        //     errors.surname = 'Введите фамилию'\r\n        // } else if (values.surname.length < 3) {\r\n        //     errors.surname = 'Фамилия должно состоять минимум из 2-х букв'\r\n        // }\r\n        // if (!values.age) {\r\n        //     errors.age = 'Введите возраст'\r\n        // }\r\n        // if (!values.email) {\r\n        //     errors.email = 'Введите адрес электронной почты'\r\n        // } else if (values.email.length < 8) {\r\n        //     errors.email = 'Имя должно состоять минимум из 8-ми символов'\r\n        // }\r\n\r\n        return errors\r\n    }\r\n\r\n    getUsers() {\r\n        UserDataService.retrieveAllUsers()\r\n            .then(\r\n                response => {\r\n                    console.log(response.data);\r\n                    this.setState({ users: response.data })\r\n                })\r\n    }\r\n\r\n    getUser(id){\r\n        UserDataService.retrieveUser(id)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n\r\n    handleDropdownChange(e) {\r\n        this.setState({ user: e.target.value });\r\n      }\r\n\r\n    render() {\r\n        let { type, salary, id, premiya, sum, month, user } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <h3>User</h3>\r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ id, type, salary, premiya, sum, month, user }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"name\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"surname\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"age\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"email\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Id</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Тип</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"type\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Оклад</label>\r\n                                        <Field className=\"form-control\" type=\"number\" name=\"salary\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Премия</label>\r\n                                        <Field className=\"form-control\" type=\"number\" name=\"premiya\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Суммарно</label>\r\n                                        <Field className=\"form-control\" type=\"number\" name=\"sum\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Месяц</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"month\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Сотрудник</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"user\"\r\n                                            value={this.props.user}\r\n                                            onChange={this.handleDropdownChange}\r\n                                        >\r\n                                            {\r\n                                                this.state.users.map(user => (\r\n                                                    <option key={user.id} value={user.id}>\r\n                                                        {user.name} {user.surname}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        <option value=\"green\" label=\"green\" />\r\n                                        </select>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\">Сохранить</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SalaryComponent"]},"metadata":{},"sourceType":"module"}